{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { selectCurrentAuth } from \"../../Login/LoginSlice\";\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { selectCurrentEmployeesList } from \"../../Employee/EmployeeSlice\";\nimport { useDispatch } from 'react-redux';\nimport { updateEmployeesList } from \"../../Employee/EmployeeSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar peopleToHireList = [{\n  id: 9,\n  name: 'Alex',\n  fullName: 'Alexander Silver√∂hrt',\n  avatar: '',\n  title: 'Job seeker',\n  source: ''\n}, {\n  id: 10,\n  name: 'SomeOtherGuy',\n  fullName: 'I Am The guy',\n  avatar: '',\n  title: 'Expert',\n  source: ''\n}];\nexport var HireFireScreen = function HireFireScreen() {\n  var dispatch = useDispatch();\n  var currentAuth = useSelector(selectCurrentAuth);\n  console.log('currentAuth in accountScreen is: ', currentAuth);\n  var selectEmployeesList = useSelector(selectCurrentEmployeesList);\n\n  var _useState = useState('select employee'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedEmployee = _useState2[0],\n      setSelectedEmployee = _useState2[1];\n\n  var _useState3 = useState('select to hire'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedHireEmployee = _useState4[0],\n      setSelectedHireEmployee = _useState4[1];\n\n  var _useState5 = useState(selectEmployeesList),\n      _useState6 = _slicedToArray(_useState5, 2),\n      employeesList = _useState6[0],\n      setEmployeesList = _useState6[1];\n\n  var _useState7 = useState(peopleToHireList),\n      _useState8 = _slicedToArray(_useState7, 2),\n      employeesToHireList = _useState8[0],\n      setEmployeesToHireList = _useState8[1];\n\n  var removeEmployee = function removeEmployee() {\n    var tmpList = employeesList.filter(function (employee) {\n      return employee.name !== selectedEmployee;\n    });\n    setEmployeesList(tmpList);\n    dispatch(updateEmployeesList(tmpList));\n    setSelectedEmployee('select employee');\n  };\n\n  var addEmployee = function addEmployee() {\n    var tmpList = employeesToHireList.filter(function (hire) {\n      return hire.name === selectedHireEmployee;\n    });\n    var ost = [].concat(_toConsumableArray(employeesList), _toConsumableArray(tmpList));\n    setEmployeesList(ost);\n    dispatch(updateEmployeesList([].concat(_toConsumableArray(employeesList), _toConsumableArray(tmpList))));\n    setEmployeesToHireList(employeesToHireList.filter(function (it) {\n      return it.name !== selectedHireEmployee;\n    }));\n    setSelectedHireEmployee('select to hire');\n  };\n\n  return _jsx(View, {\n    style: styles.layout,\n    children: currentAuth.isAdmin === 'true' ? _jsx(AdminSettings, {\n      selectedHireEmployee: selectedHireEmployee,\n      setSelectedHireEmployee: setSelectedHireEmployee,\n      employeesToHireList: employeesToHireList,\n      addEmployee: addEmployee,\n      currentAuth: currentAuth,\n      removeEmployee: removeEmployee,\n      employeesList: employeesList,\n      selectedEmployee: selectedEmployee,\n      setSelectedEmployee: setSelectedEmployee\n    }) : _jsx(NoAdminSettings, {})\n  });\n};\n\nvar AdminSettings = function AdminSettings(props) {\n  return _jsx(View, {\n    style: styles.layout,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: props.currentAuth.username\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"do you want to fire some people today? \"\n      }), _jsx(Text, {\n        style: styles.selectEmployeeTitle,\n        children: \"Pick an employee to fire\"\n      }), _jsxs(Picker, {\n        selectedValue: props.selectedEmployee,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return props.setSelectedEmployee(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: props.selectedEmployee,\n          value: props.selectedEmployee\n        }, 10), props.employeesList.map(function (employee) {\n          return _jsx(Picker.Item, {\n            label: employee.name,\n            value: employee.name\n          }, employee.id);\n        })]\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          color: \"#7394af\",\n          title: \"Fire selected\",\n          onPress: function onPress() {\n            return props.removeEmployee();\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.selectEmployeeTitle,\n        children: \"Pick an employee to hire\"\n      }), _jsxs(Picker, {\n        selectedValue: props.selectedHireEmployee,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return props.setSelectedHireEmployee(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: props.selectedHireEmployee,\n          value: props.selectedHireEmployee\n        }, 10), props.employeesToHireList.map(function (hire) {\n          return _jsx(Picker.Item, {\n            label: hire.name,\n            value: hire.name\n          }, hire.id);\n        })]\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          color: \"#7394af\",\n          title: \"Hire selected\",\n          onPress: function onPress() {\n            return props.addEmployee();\n          }\n        })\n      })]\n    })\n  });\n};\n\nvar NoAdminSettings = function NoAdminSettings() {\n  return _jsx(Text, {\n    style: styles.title,\n    children: \"You are not admin.\"\n  });\n};\n\nvar styles = StyleSheet.create({\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 8,\n    alignItems: \"center\"\n  },\n  container: {\n    justifyContent: 'center',\n    padding: 8,\n    alignItems: \"center\"\n  },\n  button: {\n    marginTop: 10,\n    width: 240\n  },\n  picker: {\n    height: 40,\n    width: 240,\n    color: '#7394af',\n    backgroundColor: '#d0dbe4'\n  },\n  settingsScreenTitle: {\n    margin: 10,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  selectEmployeeTitle: {\n    color: 'black',\n    fontSize: 12,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'kanit',\n    lineHeight: 14,\n    paddingTop: 12,\n    textTransform: 'uppercase',\n    textAlign: 'left',\n    justifyContent: 'left'\n  }\n});","map":{"version":3,"sources":["/home/alex/nodeProjects/newDemos/demos-fe/Features/HiotlabsScreen/HireFireScreen/HireFireScreen.js"],"names":["React","selectCurrentAuth","useSelector","useEffect","useState","selectCurrentEmployeesList","useDispatch","updateEmployeesList","peopleToHireList","id","name","fullName","avatar","title","source","HireFireScreen","dispatch","currentAuth","console","log","selectEmployeesList","selectedEmployee","setSelectedEmployee","selectedHireEmployee","setSelectedHireEmployee","employeesList","setEmployeesList","employeesToHireList","setEmployeesToHireList","removeEmployee","tmpList","filter","employee","addEmployee","hire","ost","it","styles","layout","isAdmin","AdminSettings","props","container","username","selectEmployeeTitle","picker","itemValue","itemIndex","map","button","NoAdminSettings","StyleSheet","create","flex","justifyContent","padding","alignItems","marginTop","width","height","color","backgroundColor","settingsScreenTitle","margin","fontSize","fontWeight","textAlign","fontStyle","fontFamily","lineHeight","paddingTop","textTransform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View, Button, Picker, } from 'react-native';\nimport { selectCurrentAuth} from '../../Login/LoginSlice';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState} from 'react';\nimport { selectCurrentEmployeesList } from '../../Employee/EmployeeSlice';\nimport { useDispatch} from 'react-redux';\nimport { updateEmployeesList } from '../../Employee/EmployeeSlice';\n\n\nvar peopleToHireList = \t[\n  {\n    id: 9, \n    name: 'Alex', \n    fullName: 'Alexander Silver√∂hrt',\n    avatar: '',\n    title: 'Job seeker',\n    source: '',\n  },\n  {\n    id: 10, \n    name: 'SomeOtherGuy', \n    fullName: 'I Am The guy',\n    avatar: '',\n    title: 'Expert',\n    source: '',\n  }\n]\n\nexport const HireFireScreen = () => {\n\n  const dispatch = useDispatch()\n\n  const currentAuth = useSelector(selectCurrentAuth)\n  console.log('currentAuth in accountScreen is: ', currentAuth)\n  const selectEmployeesList = useSelector(selectCurrentEmployeesList)\n\n  const [selectedEmployee, setSelectedEmployee] = useState('select employee')\n  const [selectedHireEmployee, setSelectedHireEmployee] = useState('select to hire')\n\n  const [employeesList, setEmployeesList] = useState(selectEmployeesList)\n  const [employeesToHireList, setEmployeesToHireList] = useState(peopleToHireList)\n\n  const removeEmployee = () => {\n    const tmpList = employeesList.filter((employee) => employee.name !== selectedEmployee)\n    setEmployeesList(tmpList)\n    dispatch(updateEmployeesList(tmpList))\n    setSelectedEmployee('select employee')\n  }\n  const addEmployee = () => {\n    const tmpList = employeesToHireList.filter( (hire) => hire.name === selectedHireEmployee)\n    const ost = [...employeesList, ...tmpList]\n    setEmployeesList(ost)\n    dispatch(updateEmployeesList([...employeesList, ...tmpList]))\n\n    setEmployeesToHireList(employeesToHireList.filter(it => it.name !== selectedHireEmployee))\n    setSelectedHireEmployee('select to hire')\n  }\n\n    return (\n    <View style={styles.layout}>\n      {\n        currentAuth.isAdmin === 'true' ? <AdminSettings \n        selectedHireEmployee={selectedHireEmployee} \n        setSelectedHireEmployee={setSelectedHireEmployee}\n        employeesToHireList={employeesToHireList} \n        addEmployee={addEmployee}\n        currentAuth={currentAuth} \n        removeEmployee={removeEmployee} \n        employeesList={employeesList} \n        selectedEmployee={selectedEmployee} \n        setSelectedEmployee={setSelectedEmployee}/>\n        :\n        <NoAdminSettings />\n      }\n    </View>\n    )\n  };\n\n  const AdminSettings = (props) => {\n    return (\n      <View style={styles.layout}>\n        <View style={styles.container}>\n          \n          <Text style={styles.title}>{props.currentAuth.username}</Text>\n          <Text style={styles.title}>do you want to fire some people today? </Text>\n          <Text style={styles.selectEmployeeTitle}>Pick an employee to fire</Text> \n              \n          <Picker\n            selectedValue={props.selectedEmployee}\n            style={styles.picker}\n            onValueChange={(itemValue, itemIndex) => props.setSelectedEmployee(itemValue)}>\n            <Picker.Item key={10} label={props.selectedEmployee} value={props.selectedEmployee} />\n            {\n              props.employeesList.map( employee => {\n                return (\n                    <Picker.Item key={employee.id} label={employee.name} value={employee.name} />\n                )\n              })\n            }\n          </Picker>      \n\n          <View style={styles.button}>\n            <Button color=\"#7394af\" title=\"Fire selected\" onPress={() => props.removeEmployee()} />\n          </View>\n\n          <Text style={styles.selectEmployeeTitle}>Pick an employee to hire</Text>     \n          <Picker\n            selectedValue={props.selectedHireEmployee}\n            style={styles.picker}\n            onValueChange={(itemValue, itemIndex) => props.setSelectedHireEmployee(itemValue)}>\n            <Picker.Item key={10} label={props.selectedHireEmployee} value={props.selectedHireEmployee} />\n            {\n              props.employeesToHireList.map( hire => {\n                return (\n                  <Picker.Item key={hire.id} label={hire.name} value={hire.name} />\n                )\n              })\n            }\n          </Picker>      \n\n          <View style={styles.button}>\n            <Button color=\"#7394af\" title=\"Hire selected\" onPress={() => props.addEmployee()} />\n          </View>\n\n        </View>    \n        \n      </View>\n    )\n  }\n\n  const NoAdminSettings = () => {\n    return (\n      <Text style={styles.title}>You are not admin.</Text>\n    )\n  }\n\n\n  const styles = StyleSheet.create({\n    layout: {\n      flex: 1,\n      justifyContent: 'center',\n      padding: 8,\n      alignItems: \"center\"\n    },\n    container: {\n      justifyContent: 'center',\n      padding: 8,\n      alignItems: \"center\"\n    },    \n    button: {\n      marginTop: 10,\n      width: 240,\n\n    },    \n    picker: {\n      height: 40, \n      width: 240,\n      color: '#7394af',\n      backgroundColor: '#d0dbe4'\n      \n    },    \n    settingsScreenTitle: {\n      margin: 10,\n      fontSize: 18,\n      fontWeight: 'bold',\n      textAlign: 'center',\n    },\n    title: {\n      fontSize: 12,\n      fontWeight: 'bold',\n      textAlign: 'left',\n    },\n    selectEmployeeTitle: {\n      color: 'black',\n      fontSize: 12,\n      fontWeight: '600',\n      fontStyle: 'normal',\n      fontFamily: 'kanit',\n      lineHeight: 14,\n      paddingTop: 12, \n      textTransform: 'uppercase', \n      textAlign: 'left',\n      justifyContent: 'left',\n    },    \n  });"]},"metadata":{},"sourceType":"module"}