{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useHeaderHeight } from '@react-navigation/elements';\nimport { useEffect, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios';\nimport { updateEmployeesList } from \"../Employee/EmployeeSlice\";\nimport { useDispatch } from 'react-redux';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport var HiotlabsScreen = function HiotlabsScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    perksList: [{\n      id: 0,\n      icon: '',\n      title: '',\n      description: ''\n    }],\n    employeesList: [{\n      id: 0,\n      name: '',\n      fullName: '',\n      avatar: '',\n      title: '',\n      source: ''\n    }]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      companyLists = _useState2[0],\n      setCompanyLists = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      employeesList = _useState4[0],\n      setEmployeesList = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      waitForData = _useState6[0],\n      setWaitForData = _useState6[1];\n\n  var getUserData = function getUserData(userId) {\n    axios.get('http://172.29.91.47:8080/' + \"valtech/getLists\").then(function (res) {\n      console.log(\"received user data in getUserData is:\", res.data);\n      setCompanyLists(res.data);\n      setEmployeesList(res.data.employeesList);\n      dispatch(updateEmployeesList(res.data.employeesList));\n      setWaitForData(true);\n    });\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n  return _jsxs(ScrollView, {\n    children: [!waitForData ? _jsx(_Fragment, {}) : _jsx(ScrollView, {\n      horizontal: true,\n      style: {\n        paddingLeft: 24\n      },\n      children: employeesList.map(function (employee) {\n        return _jsx(EmployeeHeaderCard, {\n          name: employee.name,\n          avatar: employee.avatar,\n          employee: employee\n        }, employee.id);\n      })\n    }), _jsx(Heading, {\n      text: \"Work perks and benefits\"\n    }), _jsx(ScrollView, {\n      vertical: true,\n      children: companyLists.perksList.map(function (perk) {\n        return _jsx(Perks, {\n          title: perk.title,\n          description: perk.description,\n          image: perk.icon\n        }, perk.id);\n      })\n    })]\n  });\n};\n\nvar Heading = function Heading(props) {\n  return _jsx(Text, {\n    style: blipCardstyles.heading,\n    children: props.text\n  });\n};\n\nvar Perks = function Perks(props) {\n  return _jsxs(View, {\n    style: perks.layout,\n    children: [_jsx(Image, {\n      style: perks.image,\n      source: {\n        uri: props.image\n      }\n    }), _jsxs(View, {\n      style: perks.content,\n      children: [_jsxs(Text, {\n        style: perks.title,\n        children: [\" \", props.title, \" \"]\n      }), _jsxs(Text, {\n        style: perks.description,\n        numberOfLines: 4,\n        children: [\" \", props.description, \" \"]\n      })]\n    })]\n  });\n};\n\nvar EmployeeHeaderCard = function EmployeeHeaderCard(props) {\n  var nav = useNavigation();\n  var headerHeight = useHeaderHeight();\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: {\n        paddingTop: 10\n      },\n      children: _jsxs(View, {\n        style: blipCardstyles.card,\n        onClick: function onClick() {\n          return nav.navigate('Employee', props.employee);\n        },\n        children: [_jsx(EmployeeCardAvatar, {\n          url: props.employee.avatar\n        }), _jsxs(Text, {\n          style: blipCardstyles.name,\n          children: [\" \", props.employee.name, \" \"]\n        })]\n      })\n    })\n  });\n};\n\nvar EmployeeCardAvatar = function EmployeeCardAvatar(props) {\n  var nav = useNavigation();\n  return _jsx(Image, {\n    style: blipCardstyles.avatar,\n    source: {\n      uri: props.url\n    }\n  });\n};\n\nvar perks = StyleSheet.create({\n  layout: {\n    flex: 1,\n    marginHorizontal: 24,\n    flexDirection: 'row'\n  },\n  image: {\n    width: 30,\n    height: 31,\n    borderRadius: 12,\n    marginRight: 10\n  },\n  content: {\n    flex: 2,\n    marginBottom: 10\n  },\n  title: {\n    color: '#280D5F',\n    fontSize: 10,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'kanit',\n    lineHeight: 14,\n    textTransform: 'uppercase',\n    paddingTop: 5\n  },\n  description: {\n    color: '#280D5F',\n    fontSize: 10,\n    fontWeight: '400',\n    fontStyle: 'normal',\n    fontFamily: 'Open Sans',\n    lineHeight: 18,\n    paddingTop: 2\n  }\n});\nvar blipCardstyles = StyleSheet.create({\n  avatar: {\n    borderRadius: '50%',\n    width: 64,\n    height: 64\n  },\n  img: {\n    borderRadius: '50%',\n    width: 128,\n    height: 128\n  },\n  card: {\n    width: 88,\n    height: 112,\n    borderRadius: 12,\n    padding: 10,\n    marginRight: 0,\n    background: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: '#E7E3EB',\n    marginRight: 10\n  },\n  heading: {\n    color: '#08060B',\n    fontSize: 20,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'Kanit',\n    lineHeight: 22,\n    paddingTop: 20,\n    paddingBottom: 12,\n    paddingLeft: 24\n  },\n  name: {\n    color: '#280D5F',\n    fontSize: 12,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'kanit',\n    lineHeight: 14,\n    paddingTop: 12,\n    textTransform: 'uppercase',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/alex/nodeProjects/newDemos/demos-fe/Features/HiotlabsScreen/HiotlabsScreen.js"],"names":["React","useHeaderHeight","useEffect","useState","useNavigation","createStackNavigator","axios","updateEmployeesList","useDispatch","Stack","HiotlabsScreen","dispatch","perksList","id","icon","title","description","employeesList","name","fullName","avatar","source","companyLists","setCompanyLists","setEmployeesList","waitForData","setWaitForData","getUserData","userId","get","then","res","console","log","data","paddingLeft","map","employee","perk","Heading","props","blipCardstyles","heading","text","Perks","perks","layout","image","uri","content","EmployeeHeaderCard","nav","headerHeight","paddingTop","card","navigate","EmployeeCardAvatar","url","StyleSheet","create","flex","marginHorizontal","flexDirection","width","height","borderRadius","marginRight","marginBottom","color","fontSize","fontWeight","fontStyle","fontFamily","lineHeight","textTransform","img","padding","background","borderWidth","borderColor","paddingBottom","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Image, View, ScrollView, Button,  } from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/elements';\nimport { useEffect, useState} from 'react';\nimport { useNavigation} from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport axios from 'axios'\nimport { updateEmployeesList } from '../Employee/EmployeeSlice';\nimport { useDispatch} from 'react-redux';\n\nconst Stack = createStackNavigator();\n\nexport const HiotlabsScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const [companyLists, setCompanyLists] = useState({\n    perksList: [{id: 0, icon: '', title: '', description: ''}],\n    employeesList: [{id: 0, name: '', fullName: '', avatar: '', title: '', source: ''}]\n  })\n\n  const [employeesList, setEmployeesList] = useState()\n  const [waitForData, setWaitForData] = useState(false)\n\n  const getUserData = (userId) => {\n    axios\n      //Change here to the ip you run the express server on it uses cors just for local testing between container and localhost\n      //so as long as it finds the express server it should work fine\n\n      .get('http://172.29.91.47:8080/' + `valtech/getLists` )\n      .then(res => {\n          console.log(`received user data in getUserData is:`, res.data)\n          setCompanyLists(res.data)\n          setEmployeesList(res.data.employeesList)\n          dispatch(updateEmployeesList(res.data.employeesList))\n          setWaitForData(true)\n      })\n    }\n\n    useEffect(() => {\n        getUserData()\n    },[])\n\n    return (\n      <ScrollView >\n        { \n          !waitForData ? <></>\n          :\n            <ScrollView horizontal style={{paddingLeft: 24}}>\n                {\n                  employeesList.map(employee => {\n                    return (\n                      <EmployeeHeaderCard key={employee.id} name={employee.name} avatar={employee.avatar} employee={employee}/>  \n                    )})\n                }                      \n            </ScrollView>\n        }\n\n        <Heading text=\"Work perks and benefits\"/>\n        <ScrollView vertical>\n          {\n            companyLists.perksList.map(perk => {\n            return (\n              <Perks key={perk.id} title={perk.title} description={perk.description} image={perk.icon}/>\n            )})\n          }        \n        </ScrollView>\n      </ScrollView>\n    )\n};\n\nconst Heading = (props) => (\n  <Text style={blipCardstyles.heading}>\n    {props.text}\n  </Text>\n);\n\nconst Perks = (props) => (\n  <View style={perks.layout}>\n      <Image style={perks.image} source={{ uri: props.image }} />\n    <View style={perks.content}>\n      <Text style={perks.title}> {props.title} </Text>\n      <Text style={perks.description} numberOfLines={4}> {props.description} </Text>\n    </View>\n  </View>\n);\n\nconst EmployeeHeaderCard = (props) => {\n  const nav = useNavigation()\n  const headerHeight = useHeaderHeight(); // if adding navigationHeader to mainScreen then style={{paddingTop: headerHeight }}\n  //console.log(`props.employee is: `, props.employee)\n  return (\n    <>\n      <View style={{paddingTop: 10 }} >\n        <View style={blipCardstyles.card} onClick={() => nav.navigate('Employee', props.employee) }>\n          <EmployeeCardAvatar url={props.employee.avatar} />\n          <Text style={blipCardstyles.name}> {props.employee.name} </Text>\n        </View>\n      </View>\n  </>\n  )\n}\n\nconst EmployeeCardAvatar = (props) => {\n  const nav = useNavigation()\n  return (\n  <Image \n    style={blipCardstyles.avatar}\n    source={{ uri: props.url }}\n  />\n  )\n}\n\n  const perks = StyleSheet.create({\n    layout: {\n      flex: 1, \n      marginHorizontal: 24,\n      flexDirection: 'row',\n    },\n    image: {\n      width: 30,\n      height: 31,\n      borderRadius: 12,\n      marginRight: 10,\n    },\n    content: {\n      flex: 2,\n      marginBottom: 10,\n    },\n    title: {\n      color: '#280D5F',\n      fontSize: 10,\n      fontWeight: '600',\n      fontStyle: 'normal',\n      fontFamily: 'kanit',\n      lineHeight: 14,\n      textTransform: 'uppercase',\n      paddingTop: 5,\n    },\n    description: {\n      color: '#280D5F',\n      fontSize: 10,\n      fontWeight: '400',\n      fontStyle: 'normal',\n      fontFamily: 'Open Sans',\n      lineHeight: 18,\n      paddingTop: 2,  \n    },\n  });\n\n\nconst blipCardstyles = StyleSheet.create({\n  avatar: {\n    borderRadius: '50%',\n    width: 64,\n    height: 64,\n  },\n  img: {\n    borderRadius: '50%',\n    width: 128,\n    height: 128,\n  },  \n  card: {\n    width: 88,\n    height: 112,\n    borderRadius: 12,\n    padding: 10,\n    marginRight: 0,\n    background: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: '#E7E3EB',\n    marginRight: 10,\n\n  },  \n  heading: { \n    color: '#08060B',\n    fontSize: 20,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'Kanit',\n    lineHeight: 22,\n    paddingTop: 20,\n    paddingBottom: 12,\n    paddingLeft: 24,\n  },\n  name: {\n    color: '#280D5F',\n    fontSize: 12,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'kanit',\n    lineHeight: 14,\n    paddingTop: 12, \n    textTransform: 'uppercase', \n    textAlign: 'center',\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}