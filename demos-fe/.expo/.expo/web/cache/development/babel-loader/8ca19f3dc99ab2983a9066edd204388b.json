{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar defaultProps = {\n  style: {},\n  value: ''\n};\n\nvar TagInputComponent = function TagInputComponent(props) {\n  var fontFamily = props.fontFamily,\n      style = props.style,\n      inputStyle = props.inputStyle,\n      labelStyle = props.labelStyle,\n      _props$placeholderSty = props.placeholderStyle,\n      placeholderStyle = _props$placeholderSty === void 0 ? {} : _props$placeholderSty,\n      textErrorStyle = props.textErrorStyle,\n      label = props.label,\n      _props$placeholderTex = props.placeholderTextColor,\n      placeholderTextColor = _props$placeholderTex === void 0 ? '#000' : _props$placeholderTex,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      textError = props.textError,\n      focusColor = props.focusColor,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      tagsStyle = props.tagsStyle,\n      tagsTextStyle = props.tagsTextStyle,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$onChangeText = props.onChangeText,\n      onChangeText = _props$onChangeText === void 0 ? function (value) {} : _props$onChangeText,\n      _props$onChangeValue = props.onChangeValue,\n      onChangeValue = _props$onChangeValue === void 0 ? function (value) {} : _props$onChangeValue,\n      renderTagsItem = props.renderTagsItem;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hashtag = _useState4[0],\n      setHashtag = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isFocus = _useState6[0],\n      setIsFocus = _useState6[1];\n\n  var onChange = function onChange(text) {\n    setText(text);\n    onChangeText(text);\n  };\n\n  var font = function font() {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  };\n\n  var onFocusCustom = function onFocusCustom(e) {\n    setIsFocus(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  var onBlurCustom = function onBlurCustom(e) {\n    setIsFocus(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  var onRemoveItem = function onRemoveItem(index) {\n    if (hashtag) {\n      if (props.editable === undefined || props.editable) {\n        var array = _toConsumableArray(hashtag);\n\n        array.splice(index, 1);\n        setHashtag(array);\n        onChangeValue(array);\n      }\n    }\n  };\n\n  useEffect(function () {\n    if (data) {\n      setHashtag(data);\n    } else {\n      setHashtag(null);\n    }\n  }, [data]);\n\n  var onSubmitEdit = function onSubmitEdit() {\n    if (hashtag && text.length > 0) {\n      hashtag.push(text);\n      setText('');\n      onChangeValue(hashtag);\n    }\n  };\n\n  var onBackspace = function onBackspace() {\n    if (text.length === 0 && hashtag) {\n      var array = _toConsumableArray(hashtag);\n\n      array.pop();\n      setHashtag(array);\n      onChangeValue(array);\n    }\n  };\n\n  var _renderTags = useCallback(function () {\n    if (hashtag) {\n      return hashtag.map(function (e, index) {\n        if (renderTagsItem) {\n          return _jsx(TouchableOpacity, {\n            children: renderTagsItem(e, function () {\n              onRemoveItem(index);\n            })\n          }, index);\n        }\n\n        return _jsxs(TouchableOpacity, {\n          style: [styles.selectedItem, tagsStyle],\n          onPress: function onPress() {\n            onRemoveItem(index);\n          },\n          children: [_jsx(Text, {\n            style: [styles.selectedTextItem, tagsTextStyle, font()],\n            children: e\n          }), _jsx(Text, {\n            style: [styles.selectedTextItem, tagsTextStyle, font()],\n            children: \"\\u24E7\"\n          })]\n        }, index);\n      });\n    }\n\n    return null;\n  }, [hashtag]);\n\n  var _renderItemSelected = function _renderItemSelected() {\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        paddingVertical: 8\n      },\n      children: [_renderTags(), _jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n        style: [styles.input, inputStyle, font()],\n        value: text,\n        placeholder: placeholder,\n        placeholderTextColor: placeholderTextColor,\n        onChangeText: onChange,\n        onFocus: onFocusCustom,\n        onBlur: onBlurCustom,\n        onSubmitEditing: onSubmitEdit,\n        onKeyPress: function onKeyPress(_ref) {\n          var nativeEvent = _ref.nativeEvent;\n\n          if (nativeEvent.key === 'Backspace') {\n            onBackspace();\n          }\n        }\n      }))]\n    });\n  };\n\n  var colorFocus = useMemo(function () {\n    if (isFocus && focusColor) {\n      return {\n        borderBottomColor: focusColor,\n        borderTopColor: focusColor,\n        borderLeftColor: focusColor,\n        borderRightColor: focusColor\n      };\n    } else {\n      return {};\n    }\n  }, [isFocus]);\n  var styleLable = useMemo(function () {\n    if (isFocus || hashtag && hashtag.length > 0 && label) {\n      return _objectSpread({\n        top: 5,\n        color: focusColor\n      }, labelStyle);\n    } else {\n      return _objectSpread({\n        position: 'absolute'\n      }, placeholderStyle);\n    }\n  }, [isFocus, hashtag, placeholderStyle, labelStyle]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: [styles.container, style, colorFocus],\n      children: _jsx(View, {\n        style: styles.textInput,\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          children: [label ? _jsx(Text, {\n            style: [styles.label, styleLable],\n            children: label\n          }) : null, _renderItemSelected()]\n        })\n      })\n    }), textError ? _jsx(Text, {\n      style: [styles.textError, textErrorStyle],\n      children: textError\n    }) : null]\n  });\n};\n\nTagInputComponent.defaultProps = defaultProps;\nexport default TagInputComponent;","map":{"version":3,"sources":["/home/alex/nodeProjects/newDemos/demos-fe/node_modules/react-native-element-textinput/src/TagsInput/index.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","styles","defaultProps","style","value","TagInputComponent","props","fontFamily","inputStyle","labelStyle","placeholderStyle","textErrorStyle","label","placeholderTextColor","placeholder","textError","focusColor","data","tagsStyle","tagsTextStyle","onFocus","onBlur","onChangeText","onChangeValue","renderTagsItem","text","setText","hashtag","setHashtag","isFocus","setIsFocus","onChange","font","onFocusCustom","e","onBlurCustom","onRemoveItem","index","editable","undefined","array","splice","onSubmitEdit","length","push","onBackspace","pop","_renderTags","map","selectedItem","selectedTextItem","_renderItemSelected","flexDirection","flexWrap","paddingVertical","input","nativeEvent","key","colorFocus","borderBottomColor","borderTopColor","borderLeftColor","borderRightColor","styleLable","top","color","position","container","textInput","flex","justifyContent"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { styles } from './styles';\nimport { CTextInput } from './type';\n\n\nconst defaultProps = {\n  style: {},\n  value: '',\n};\n\nconst TagInputComponent: CTextInput = props => {\n  const {\n    fontFamily,\n    style,\n    inputStyle,\n    labelStyle,\n    placeholderStyle = {},\n    textErrorStyle,\n    label,\n    placeholderTextColor = '#000',\n    placeholder = '',\n    textError,\n    focusColor,\n    data = [],\n    tagsStyle,\n    tagsTextStyle,\n    onFocus,\n    onBlur,\n    onChangeText = (value: string) => { },\n    onChangeValue = (value: string[]) => { },\n    renderTagsItem\n  } = props;\n\n  const [text, setText] = useState<string>('');\n  const [hashtag, setHashtag] = useState<string[] | null>(null);\n  const [isFocus, setIsFocus] = useState<boolean>(false);\n\n  const onChange = (text: string) => {\n    setText(text);\n    onChangeText(text);\n  };\n\n  const font = () => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily,\n      };\n    } else {\n      return {};\n    }\n  };\n\n  const onFocusCustom = (e: any) => {\n    setIsFocus(true);\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  const onBlurCustom = (e: any) => {\n    setIsFocus(false);\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  const onRemoveItem = (index: number) => {\n    if (hashtag) {\n      if (props.editable === undefined || props.editable) {\n        var array = [...hashtag];\n        array.splice(index, 1);\n        setHashtag(array);\n        onChangeValue(array);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setHashtag(data);\n    }else{\n      setHashtag(null);\n    }\n  }, [data]);\n\n  const onSubmitEdit = () => {\n    if (hashtag && text.length > 0) {\n      hashtag.push(text);\n      setText('');\n      onChangeValue(hashtag);\n    }\n  };\n\n  const onBackspace = () => {\n    if (text.length === 0 && hashtag) {\n      var array = [...hashtag];\n      array.pop();\n      setHashtag(array);\n      onChangeValue(array);\n    }\n  }\n\n  const _renderTags = useCallback(() => {\n    if (hashtag) {\n      return hashtag.map((e, index) => {\n        if (renderTagsItem) {\n          return <TouchableOpacity\n            key={index}\n          >\n            {renderTagsItem(e, () => { onRemoveItem(index) })}\n          </TouchableOpacity>\n        }\n        return (\n          <TouchableOpacity\n            key={index}\n            style={[styles.selectedItem, tagsStyle]}\n            onPress={() => { onRemoveItem(index) }}\n          >\n            <Text style={[styles.selectedTextItem, tagsTextStyle, font()]}>{e}</Text>\n            <Text style={[styles.selectedTextItem, tagsTextStyle, font()]}>ⓧ</Text>\n          </TouchableOpacity>\n        )\n      })\n    }\n    return null;\n  }, [hashtag]);\n\n  const _renderItemSelected = () => {\n    return (\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap', paddingVertical: 8 }}>\n        {_renderTags()}\n        <TextInput\n          {...props}\n          style={[styles.input, inputStyle, font()]}\n          value={text}\n          placeholder={placeholder}\n          placeholderTextColor={placeholderTextColor}\n          onChangeText={onChange}\n          onFocus={onFocusCustom}\n          onBlur={onBlurCustom}\n          onSubmitEditing={onSubmitEdit}\n          onKeyPress={({ nativeEvent }) => {\n            if (nativeEvent.key === 'Backspace') {\n              onBackspace();\n            }\n          }}\n        />\n      </View>)\n  };\n\n  const colorFocus = useMemo(() => {\n    if (isFocus && focusColor) {\n      return {\n        borderBottomColor: focusColor,\n        borderTopColor: focusColor,\n        borderLeftColor: focusColor,\n        borderRightColor: focusColor\n      };\n    } else {\n      return {};\n    }\n  }, [isFocus]);\n\n  const styleLable: any = useMemo(() => {\n    if (isFocus || hashtag && hashtag.length > 0 && label) {\n      return {\n        top: 5,\n        color: focusColor,\n        ...labelStyle\n      };\n    } else {\n      return {\n        position: 'absolute',\n        ...placeholderStyle\n      }\n    }\n  }, [isFocus, hashtag, placeholderStyle, labelStyle]);\n\n  return (\n    <>\n      <View style={[styles.container, style, colorFocus]}>\n        <View\n          style={styles.textInput}>\n          <View style={{ flex: 1, justifyContent: 'center' }}>\n            {label ? <Text style={[styles.label, styleLable]}>{label}</Text> : null}\n            {_renderItemSelected()}\n          </View>\n        </View>\n      </View>\n      {textError ? (\n        <Text style={[styles.textError, textErrorStyle]}>{textError}</Text>\n      ) : null}\n    </>\n  );\n};\n\nTagInputComponent.defaultProps = defaultProps;\n\nexport default TagInputComponent;\n"]},"metadata":{},"sourceType":"module"}