{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { updateLogin } from \"../Login/LoginSlice\";\nimport { useState } from 'react';\nimport { updateEnv } from \"../Env/EnvSlice\";\nimport 'dotenv/config';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar authenticate = function authenticate(username, password, dispatch) {\n  console.log(\"username is: \", username);\n  axios.post('http://172.29.91.47:8080/' + \"valtech/authenticate\", {\n    \"username\": username,\n    \"password\": password\n  }).then(function (res) {\n    dispatch(updateLogin(res.data));\n  });\n};\n\nexport var LoginScreen = function LoginScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"firstName\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"password\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.layout,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"LoginScreen\"\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: 'grey',\n        color: 'white',\n        height: 30,\n        marginBottom: 1\n      },\n      placeholder: username,\n      value: username,\n      onChangeText: function onChangeText(e) {\n        return setUsername(e);\n      }\n    }), _jsx(TextInput, {\n      style: {\n        backgroundColor: 'grey',\n        color: 'white',\n        height: 30,\n        marginBottom: 20\n      },\n      placeholder: username,\n      value: password,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(e) {\n        return setPassword(e);\n      }\n    }), _jsx(Button, {\n      title: \"login\",\n      onPress: function onPress() {\n        return authenticate(username, password, dispatch);\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 8,\n    width: \"50%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/alex/nodeProjects/newDemos/demos-fe/Features/LoginScreen/LoginScreen.js"],"names":["React","axios","useDispatch","updateLogin","useState","updateEnv","authenticate","username","password","dispatch","console","log","post","then","res","data","LoginScreen","setUsername","setPassword","styles","layout","title","backgroundColor","color","height","marginBottom","e","StyleSheet","create","flex","justifyContent","padding","width","marginLeft","marginRight","fontSize","fontWeight","textAlign"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAAQC,WAAR;AACA,SAASC,QAAT,QAAwB,OAAxB;AACA,SAASC,SAAT;AACA,OAAO,eAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAAkC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,QAA7B;AACAN,EAAAA,KAAK,CAEAW,IAFL,CAEU,oDAFV,EAEgE;AAAC,gBAAYL,QAAb;AAAuB,gBAAYC;AAAnC,GAFhE,EAGKK,IAHL,CAGU,UAAAC,GAAG,EAAI;AACTL,IAAAA,QAAQ,CAACN,WAAW,CAACW,GAAG,CAACC,IAAL,CAAZ,CAAR;AACH,GALL;AAMD,CARD;;AAUA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,MAAMP,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,kBAA8BE,QAAQ,CAAC,WAAD,CAAtC;AAAA;AAAA,MAAKG,QAAL;AAAA,MAAeU,WAAf;;AACA,mBAA8Bb,QAAQ,CAAC,UAAD,CAAtC;AAAA;AAAA,MAAKI,QAAL;AAAA,MAAeU,WAAf;;AAEE,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADF,EAEE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,MAAlB;AAA0BC,QAAAA,KAAK,EAAE,OAAjC;AAA0CC,QAAAA,MAAM,EAAE,EAAlD;AAAsDC,QAAAA,YAAY,EAAE;AAApE,OAAlB;AACE,MAAA,WAAW,EAAElB,QADf;AAEE,MAAA,KAAK,EAAEA,QAFT;AAGE,MAAA,YAAY,EAAE,sBAACmB,CAAD;AAAA,eAAOT,WAAW,CAACS,CAAD,CAAlB;AAAA;AAHhB,MAFF,EAOE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACJ,QAAAA,eAAe,EAAE,MAAlB;AAA0BC,QAAAA,KAAK,EAAE,OAAjC;AAA0CC,QAAAA,MAAM,EAAE,EAAlD;AAAsDC,QAAAA,YAAY,EAAE;AAApE,OAAlB;AACE,MAAA,WAAW,EAAElB,QADf;AAEE,MAAA,KAAK,EAAEC,QAFT;AAGE,MAAA,eAAe,MAHjB;AAIE,MAAA,YAAY,EAAE,sBAACkB,CAAD;AAAA,eAAOR,WAAW,CAACQ,CAAD,CAAlB;AAAA;AAJhB,MAPF,EAaE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE;AAAA,eAAMpB,YAAY,CAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,CAAlB;AAAA;AAA/B,MAbF;AAAA,IADF;AAiBD,CAvBI;AAyBL,IAAMU,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,OAAO,EAAE,CAHH;AAINC,IAAAA,KAAK,EAAE,KAJD;AAKNC,IAAAA,UAAU,EAAE,MALN;AAMNC,IAAAA,WAAW,EAAE;AANP,GADuB;AAS/Bb,EAAAA,KAAK,EAAE;AACLc,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,SAAS,EAAE;AAHN;AATwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport axios from 'axios'\nimport { useDispatch} from 'react-redux';\nimport {updateLogin } from '../Login/LoginSlice';\nimport { useState} from 'react';\nimport { updateEnv } from '../Env/EnvSlice';\nimport 'dotenv/config'\n\nconst authenticate = (username, password, dispatch) => {\n  console.log(\"username is: \", username)\n  axios\n      /// authenticate\n      .post('http://172.29.91.47:8080/' + `valtech/authenticate`, {\"username\": username, \"password\": password})\n      .then(res => {\n          dispatch(updateLogin(res.data))\n      })\n}   \n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  let [username, setUsername] = useState(\"firstName\")\n  let [password, setPassword] = useState(\"password\")    \n\n    return (\n      <View style={styles.layout}>\n        <Text style={styles.title}>LoginScreen</Text>\n        <TextInput style={{backgroundColor: 'grey', color: 'white', height: 30, marginBottom: 1}}\n          placeholder={username}\n          value={username}\n          onChangeText={(e) => setUsername(e)}\n        />\n        <TextInput style={{backgroundColor: 'grey', color: 'white', height: 30, marginBottom: 20}}\n          placeholder={username}\n          value={password}\n          secureTextEntry\n          onChangeText={(e) => setPassword(e)}\n        />      \n        <Button title=\"login\" onPress={() => authenticate(username, password, dispatch)} />\n      </View>\n    );\n  };\n\n  const styles = StyleSheet.create({\n    layout: {\n      flex: 1,\n      justifyContent: 'center',\n      padding: 8,\n      width: \"50%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    title: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      textAlign: 'center',\n    },\n  });"]},"metadata":{},"sourceType":"module"}