{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHeaderHeight } from '@react-navigation/elements';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Heading = function Heading(props) {\n  return _jsx(Text, {\n    style: blipCardstyles.heading,\n    children: props.text\n  });\n};\n\nvar toDoListCollector = [];\nexport var EmployeeScreen = function EmployeeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var headerHeight = useHeaderHeight();\n  console.log(\"route.params is: \", route.params);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToDos = _useState2[0],\n      setUserToDos = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      waitForData = _useState4[0],\n      setWaitForData = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedToDoList = _useState6[0],\n      setSelectedTodoList = _useState6[1];\n\n  var _useState7 = useState({\n    id: 100,\n    userId: 0,\n    name: '',\n    date: '',\n    toDo: []\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      finalUserToDoObject = _useState8[0],\n      setFinalUserToDoObject = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currToDoList = _useState10[0],\n      setCurrToDoList = _useState10[1];\n\n  var _useState11 = useState(\"Add ToDo here\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      newToDo = _useState12[0],\n      setNewTodo = _useState12[1];\n\n  var getUserToDos = function getUserToDos(userId) {\n    console.log('userId is: ', userId);\n    axios.post('http://172.29.91.47:8080/' + \"valtech/getUserToDosByUserId\", {\n      userId: userId\n    }).then(function (res) {\n      console.log(\"received user data in getUserToDos is:\", res.data);\n      setUserToDos(res.data);\n      setWaitForData(true);\n    });\n  };\n\n  var sendUpdateUserTodos = function sendUpdateUserTodos(todoObj) {\n    console.log('todoObj is: ', todoObj);\n    axios.post('http://172.29.91.47:8080/' + \"hiotlabs/updateUserTodos\", {\n      todoObj: todoObj\n    }).then(function (res) {\n      console.log(\"received user data in sendUpdateUserTodos is:\", res.data);\n    });\n  };\n\n  var removeToDo = function removeToDo(todoId) {\n    var tmpToDoList = currToDoList.toDo.filter(function (item) {\n      return item.id !== todoId;\n    });\n    var final = currToDoList;\n    final.toDo = tmpToDoList;\n    setCurrToDoList(_objectSpread({}, final));\n    setFinalUserToDoObject(final);\n  };\n\n  var addToDo = function addToDo(todoId) {\n    var tmpList = currToDoList;\n    tmpList.toDo.push({\n      id: Math.floor(Math.random() * 1000),\n      desc: newToDo\n    });\n    setCurrToDoList(_objectSpread({}, tmpList));\n    setFinalUserToDoObject(tmpList);\n    setNewTodo(\"Add ToDo here\");\n  };\n\n  var onSubmitToDoList = function onSubmitToDoList() {};\n\n  var updateUserToDoList = function updateUserToDoList(itemValue, itemIndex) {\n    var tmpList = [];\n\n    if (userToDos.length <= 1) {\n      setCurrToDoList(userToDos[0]);\n    } else {\n      tmpList = userToDos.filter(function (it) {\n        return it.id === itemIndex;\n      })[0];\n      setCurrToDoList(tmpList);\n    }\n\n    setSelectedTodoList(itemValue);\n  };\n\n  useEffect(function () {\n    getUserToDos(route.params.id);\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.layout,\n      children: [_jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.heading,\n          children: [\" \", route.params.title, \" \"]\n        }), _jsx(EmployeeAvatar, {\n          url: route.params.avatar\n        }), _jsxs(Text, {\n          style: styles.title,\n          children: [\" \", route.params.fullName, \" \"]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: [_jsx(View, {\n            style: {\n              flex: 1,\n              height: 1,\n              backgroundColor: 'black'\n            }\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: {\n                width: \"100%\",\n                textAlign: 'center'\n              },\n              children: \" ToDos \"\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 1,\n              height: 1,\n              backgroundColor: 'black'\n            }\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.container,\n        children: !waitForData ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n          children: [_jsx(Text, {\n            style: styles.todoTitle,\n            children: \" Pick a ToDo List\"\n          }), _jsxs(Picker, {\n            selectedValue: selectedToDoList,\n            style: styles.picker,\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              return updateUserToDoList(itemValue, itemIndex);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Select ToDo list\",\n              value: selectedToDoList\n            }, 20), userToDos.map(function (todo) {\n              return _jsx(Picker.Item, {\n                label: todo.name,\n                value: todo.name\n              }, todo.id);\n            })]\n          })]\n        })\n      }), _jsx(View, {\n        style: {\n          marginTop: 20\n        },\n        children: !selectedToDoList ? _jsx(_Fragment, {}) : _jsx(ToDos, {\n          currToDoList: currToDoList,\n          addToDo: addToDo,\n          removeToDo: removeToDo,\n          onSubmitToDoList: onSubmitToDoList,\n          newTodo: newToDo,\n          setNewTodo: setNewTodo\n        })\n      })]\n    })\n  });\n};\n\nvar ToDos = function ToDos(props) {\n  return _jsxs(View, {\n    style: {\n      marginTop: 10\n    },\n    children: [props.currToDoList.toDo.map(function (todo, index) {\n      return _jsxs(View, {\n        children: [_jsx(View, {\n          children: index === 0 && _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'center',\n              marginBottom: 1\n            },\n            children: [_jsx(TextInput, {\n              style: {\n                backgroundColor: '#e8edf2',\n                color: 'black',\n                marginRight: 2\n              },\n              placeholder: props.newToDo,\n              value: props.newTodo,\n              onChangeText: props.setNewTodo\n            }), _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: '#d0dbe4',\n                width: 37,\n                height: 33,\n                justifyContent: \"center\",\n                textAlign: \"center\"\n              },\n              onPress: function onPress() {\n                return props.addToDo(todo.id);\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: 'black'\n                },\n                children: \"+\"\n              })\n            })]\n          })\n        }), _jsx(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginBottom: 1\n          },\n          children: index % 2 ? _jsxs(_Fragment, {\n            children: [_jsx(TextInput, {\n              style: {\n                backgroundColor: '#e8edf2',\n                color: 'black',\n                marginRight: 2\n              },\n              placeholder: todo.desc,\n              value: todo.desc\n            }), _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: '#d0dbe4',\n                width: 37,\n                height: 33,\n                justifyContent: \"center\",\n                textAlign: \"center\"\n              },\n              onPress: function onPress() {\n                return props.removeToDo(todo.id);\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: 'black'\n                },\n                children: \"-\"\n              })\n            })]\n          }) : _jsxs(_Fragment, {\n            children: [_jsx(TextInput, {\n              style: {\n                backgroundColor: '#d0dbe4',\n                color: 'black',\n                marginRight: 2\n              },\n              placeholder: todo.desc,\n              value: todo.desc\n            }), _jsx(TouchableOpacity, {\n              style: {\n                backgroundColor: '#e8edf2',\n                width: 37,\n                height: 33,\n                justifyContent: \"center\",\n                textAlign: \"center\"\n              },\n              onPress: function onPress() {\n                return props.removeToDo(todo.id);\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: 'black'\n                },\n                children: \"-\"\n              })\n            })]\n          })\n        })]\n      }, todo.id);\n    }), _jsx(View, {\n      style: {\n        marginTop: 40\n      },\n      children: _jsx(Button, {\n        color: \"#7394af\",\n        title: \"submit\",\n        onPress: function onPress() {\n          return props.onSubmitToDoList();\n        }\n      })\n    })]\n  });\n};\n\nvar EmployeeAvatar = function EmployeeAvatar(props) {\n  return _jsx(Image, {\n    style: styles.img,\n    source: {\n      uri: props.url\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  layout: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    justifyContent: 'center',\n    padding: 8,\n    alignItems: \"center\"\n  },\n  remove: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    color: '#08060B',\n    fontSize: 16,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'Kanit',\n    lineHeight: 22,\n    paddingTop: 20,\n    paddingBottom: 12,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  img: {\n    borderRadius: '50%',\n    width: 128,\n    height: 128,\n    textAlign: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  picker: {\n    height: 40,\n    width: 240,\n    color: 'black',\n    backgroundColor: '#d0dbe4'\n  },\n  todoTitle: {\n    color: 'black',\n    fontSize: 12,\n    fontWeight: '600',\n    fontStyle: 'normal',\n    fontFamily: 'kanit',\n    lineHeight: 14,\n    paddingTop: 12,\n    textTransform: 'uppercase',\n    textAlign: 'left'\n  }\n});","map":{"version":3,"sources":["/home/alex/nodeProjects/newDemos/demos-fe/Features/EmployeeScreen/EmployeeScreen.js"],"names":["React","useHeaderHeight","axios","useEffect","useState","Heading","props","blipCardstyles","heading","text","toDoListCollector","EmployeeScreen","route","navigation","headerHeight","console","log","params","userToDos","setUserToDos","waitForData","setWaitForData","selectedToDoList","setSelectedTodoList","id","userId","name","date","toDo","finalUserToDoObject","setFinalUserToDoObject","currToDoList","setCurrToDoList","newToDo","setNewTodo","getUserToDos","post","then","res","data","sendUpdateUserTodos","todoObj","removeToDo","todoId","tmpToDoList","filter","item","final","addToDo","tmpList","push","Math","floor","random","desc","onSubmitToDoList","updateUserToDoList","itemValue","itemIndex","length","it","styles","layout","title","avatar","fullName","flexDirection","alignItems","flex","height","backgroundColor","width","textAlign","container","todoTitle","picker","map","todo","marginTop","ToDos","index","justifyContent","marginBottom","color","marginRight","newTodo","EmployeeAvatar","img","uri","url","StyleSheet","create","padding","remove","margin","fontSize","fontWeight","fontStyle","fontFamily","lineHeight","paddingTop","paddingBottom","textTransform","borderRadius","marginLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Image, View, Button, Picker, TextInput, TouchableOpacity} from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/elements';\nimport axios from 'axios'\nimport { useEffect, useState} from 'react';\n\nconst Heading = (props) => (\n  <Text style={blipCardstyles.heading}>\n    {props.text}\n  </Text>\n);\n\nlet toDoListCollector = []\n\nexport const EmployeeScreen = ({route, navigation}) => {\n  const headerHeight = useHeaderHeight(); \n  console.log(`route.params is: `, route.params)\n\n  const [userToDos, setUserToDos] = useState()\n  const [waitForData, setWaitForData] = useState(false)\n  const [selectedToDoList, setSelectedTodoList] = useState()\n  //if need to update a users ToDO List todos in backend memory the post finalUserToDoObject to function sendUpdateUserTodos\n  const [finalUserToDoObject, setFinalUserToDoObject] = useState({id: 100, userId: 0, name: '', date: '', toDo: []})\n  const [currToDoList, setCurrToDoList ] = useState()\n  const [newToDo, setNewTodo] = useState(\"Add ToDo here\")\n  \n  // API\n  const getUserToDos = (userId) => {\n    console.log('userId is: ', userId)\n    axios\n      .post('http://172.29.91.47:8080/' + `valtech/getUserToDosByUserId`, {userId: userId} )\n      .then(res => {\n          console.log(`received user data in getUserToDos is:`, res.data)\n          setUserToDos(res.data)\n          setWaitForData(true)\n      })\n  }\n\n  const sendUpdateUserTodos = (todoObj) => {\n    console.log('todoObj is: ', todoObj)\n    axios\n      .post('http://172.29.91.47:8080/' + `hiotlabs/updateUserTodos`, {todoObj} )\n      .then(res => {\n          console.log(`received user data in sendUpdateUserTodos is:`, res.data)\n      })\n  }  \n  \n  // Controllers\n  const removeToDo = (todoId) => {\n    const tmpToDoList = currToDoList.toDo.filter((item) => item.id !== todoId);\n    var final = currToDoList\n    final.toDo = tmpToDoList\n    setCurrToDoList({...final})\n    setFinalUserToDoObject(final)\n  }  \n\n  const addToDo = (todoId) => {\n    var tmpList = currToDoList\n    //can fail but its just a demo\n    tmpList.toDo.push({id: Math.floor(Math.random() * 1000), desc: newToDo})\n    setCurrToDoList({...tmpList})\n    setFinalUserToDoObject(tmpList)\n    setNewTodo(\"Add ToDo here\")\n  }\n\n  const onSubmitToDoList = () => {\n    //no use to post it since its just inMemory in BE but if re-run app and want to see the changes onLoad then post it. \"Button submit\"\n    //just uncomment\n    //sendUpdateUserTodos(finalUserToDoObject)\n  }\n   \n  const updateUserToDoList = (itemValue, itemIndex) => {\n    var tmpList = []\n    if (userToDos.length <= 1) {\n      setCurrToDoList(userToDos[0])\n    }\n    else {\n      tmpList = userToDos.filter(it => it.id === itemIndex)[0]\n      setCurrToDoList(tmpList)\n    }\n\n    setSelectedTodoList(itemValue)\n  }\n\n  // Init\n  useEffect(() => {\n    getUserToDos(route.params.id)\n  },[])\n\n  //Main employeeScreen we run from here\n  return (\n    <>\n      <View style={styles.layout}>\n        <View >\n          <Text style={styles.heading}> {route.params.title} </Text>\n          <EmployeeAvatar url={route.params.avatar} />\n          <Text style={styles.title}> {route.params.fullName} </Text>\n\n          <View style={{flexDirection: 'row', alignItems: 'center'}}>\n            <View style={{flex: 1, height: 1, backgroundColor: 'black'}} />\n              <View>\n                <Text style={{width: \"100%\", textAlign: 'center'}}> ToDos </Text>\n              </View>\n            <View style={{flex: 1, height: 1, backgroundColor: 'black'}} />\n          </View>\n        </View>\n\n        <View style={styles.container}>\n          {\n            !waitForData ? <></> : \n            <>\n              <Text style={styles.todoTitle}> Pick a ToDo List</Text>\n              <Picker\n                selectedValue={selectedToDoList}\n                style={styles.picker}\n                onValueChange={(itemValue, itemIndex) => updateUserToDoList(itemValue, itemIndex)}>\n                <Picker.Item key={20} label=\"Select ToDo list\" value={selectedToDoList} />\n                {\n                  userToDos.map( todo => {\n                    return (\n                      <Picker.Item key={todo.id} label={todo.name} value={todo.name} />\n                    )\n                  })\n                }\n              </Picker>\n            </>\n          }\n        </View>\n\n        <View style={{marginTop: 20}}>\n          {\n            !selectedToDoList ? <></> \n            : \n            <ToDos \n              currToDoList={currToDoList} \n              addToDo={addToDo}\n              removeToDo={removeToDo}\n              onSubmitToDoList={onSubmitToDoList}\n              newTodo={newToDo}\n              setNewTodo={setNewTodo}\n            />\n          }\n        </View>\n      </View>\n    </>\n  )\n}\n\n  //##########\n  const ToDos = (props) => {\n    return (\n      <View style={{marginTop: 10}}>\n\n        {props.currToDoList.toDo.map( (todo, index) => {\n            return (\n              <View key={todo.id}>\n                <View>\n                  {\n                    index === 0 && \n                    <View style={{flexDirection: 'row', justifyContent: 'center', marginBottom: 1}} >\n                      <TextInput style={{backgroundColor: '#e8edf2', color: 'black', marginRight: 2}}\n                        placeholder={props.newToDo}\n                        value={props.newTodo}\n                        onChangeText={props.setNewTodo}\n                      />\n                      <TouchableOpacity style={{backgroundColor: '#d0dbe4', width: 37, height: 33, justifyContent: \"center\", textAlign: \"center\"}} onPress={() => props.addToDo(todo.id) }>\n                        <Text style={{color: 'black'}}>+</Text>\n                      </TouchableOpacity>                    \n                    </View>                  \n                  }                   \n                </View>\n              \n                <View  style={{flexDirection: 'row', justifyContent: 'center', marginBottom: 1}} >\n                  {\n                    index % 2 ? \n                    <>\n                      <TextInput style={{backgroundColor: '#e8edf2', color: 'black', marginRight: 2}}\n                        placeholder={todo.desc}\n                        value={todo.desc}\n                      />\n                      <TouchableOpacity style={{backgroundColor: '#d0dbe4', width: 37, height: 33, justifyContent: \"center\", textAlign: \"center\"}} onPress={() => props.removeToDo(todo.id) }>\n                        <Text style={{color: 'black'}}>-</Text>\n                      </TouchableOpacity>\n                    </>\n                    : \n                    <>\n                      <TextInput style={{backgroundColor: '#d0dbe4',  color: 'black', marginRight: 2}}\n                        placeholder={todo.desc}\n                        value={todo.desc}\n                      />\n                      <TouchableOpacity style={{backgroundColor: '#e8edf2', width: 37, height: 33, justifyContent: \"center\", textAlign: \"center\"}} onPress={() => props.removeToDo(todo.id) }>\n                        <Text style={{color: 'black'}}>-</Text>\n                      </TouchableOpacity>\n                    </>\n                  }\n                </View>\n              </View>\n            )\n          })\n        }  \n          <View style={{marginTop: 40}}>\n            <Button  color=\"#7394af\" title=\"submit\" onPress={() => props.onSubmitToDoList() } />\n          </View>    \n      </View>\n    )\n  }\n\nconst EmployeeAvatar = (props) => {\n  return (\n    <Image \n      style={styles.img}\n      source={{ uri: props.url }}\n    />\n  )\n}\n\n  const styles = StyleSheet.create({\n    layout: {\n      justifyContent: 'center',\n      alignItems: 'center',\n    }, \n    container: {\n      justifyContent: 'center',\n      padding: 8,\n      alignItems: \"center\"\n    },\n    remove: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },    \n    title: {\n      margin: 24,\n      fontSize: 18,\n      fontWeight: 'bold',\n      textAlign: 'center',\n    },\n    heading: { \n      color: '#08060B',\n      fontSize: 16,\n      fontWeight: '600',\n      fontStyle: 'normal',\n      fontFamily: 'Kanit',\n      lineHeight: 22,\n      paddingTop: 20,\n      paddingBottom: 12,\n      textAlign: 'center',\n      textTransform: 'uppercase', \n    },\n    img: {\n      borderRadius: '50%',\n      width: 128,\n      height: 128,\n      textAlign: 'center',\n      marginLeft: 'auto',\n      marginRight: 'auto'    \n    },\n    picker: {\n      height: 40, \n      width: 240,\n      color: 'black',\n      backgroundColor: '#d0dbe4'\n    },\n    todoTitle: {\n      color: 'black',\n      fontSize: 12,\n      fontWeight: '600',\n      fontStyle: 'normal',\n      fontFamily: 'kanit',\n      lineHeight: 14,\n      paddingTop: 12, \n      textTransform: 'uppercase', \n      textAlign: 'left',\n    },      \n  });  \n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}